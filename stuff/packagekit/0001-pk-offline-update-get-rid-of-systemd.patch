From ad35bc325e387fe1c6708440eeb8f5f1acee1895 Mon Sep 17 00:00:00 2001
From: Ishimoto Shinobu <nagakamira@gmail.com>
Date: Sun, 9 Feb 2020 00:49:02 +0900
Subject: [PATCH] pk-offline-update: don't use systemd

Signed-off-by: Ishimoto Shinobu <nagakamira@gmail.com>
---
 client/Makefile.am         |  1 -
 client/pk-offline-update.c | 97 ++++++++++++--------------------------
 configure.ac               |  2 +-
 3 files changed, 31 insertions(+), 69 deletions(-)

diff --git a/client/Makefile.am b/client/Makefile.am
index fe31b74..b20d396 100644
--- a/client/Makefile.am
+++ b/client/Makefile.am
@@ -96,7 +96,6 @@ pk_offline_update_SOURCES =				\
 pk_offline_update_LDADD =				\
 	$(GLIB_LIBS)					\
 	$(GIO_LIBS)					\
-	$(SYSTEMD_LIBS)					\
 	$(PK_GLIB2_LIBS)
 
 pk_offline_update_LDFLAGS =				\
diff --git a/client/pk-offline-update.c b/client/pk-offline-update.c
index 900f975..0937465 100644
--- a/client/pk-offline-update.c
+++ b/client/pk-offline-update.c
@@ -32,7 +32,6 @@
 #include <packagekit-glib2/pk-offline-private.h>
 #include <stdlib.h>
 #include <unistd.h>
-#include <systemd/sd-journal.h>
 
 static void
 pk_offline_update_set_plymouth_msg (const gchar *msg)
@@ -49,11 +48,10 @@ pk_offline_update_set_plymouth_msg (const gchar *msg)
 		return;
 	cmdline = g_strdup_printf ("plymouth display-message --text=\"%s\"", msg);
 	if (!g_spawn_command_line_async (cmdline, &error)) {
-		sd_journal_print (LOG_WARNING,
-				  "failed to display message on splash: %s",
+		printf("failed to display message on splash: %s",
 				  error->message);
 	} else {
-		sd_journal_print (LOG_INFO, "sent msg to plymouth '%s'", msg);
+		printf("sent msg to plymouth '%s'", msg);
 	}
 }
 
@@ -72,11 +70,10 @@ pk_offline_update_set_plymouth_mode (const gchar *mode)
 		return;
 	cmdline = g_strdup_printf ("plymouth change-mode --%s", mode);
 	if (!g_spawn_command_line_async (cmdline, &error)) {
-		sd_journal_print (LOG_WARNING,
-				  "failed to change mode for splash: %s",
+		printf("failed to change mode for splash: %s",
 				  error->message);
 	} else {
-		sd_journal_print (LOG_INFO, "sent mode to plymouth '%s'", mode);
+		printf("sent mode to plymouth '%s'", mode);
 	}
 }
 
@@ -96,8 +93,7 @@ pk_offline_update_set_plymouth_percentage (guint percentage)
 	cmdline = g_strdup_printf ("plymouth system-update --progress=%i",
 				   percentage);
 	if (!g_spawn_command_line_async (cmdline, &error)) {
-		sd_journal_print (LOG_WARNING,
-				  "failed to set percentage for splash: %s",
+		printf("failed to set percentage for splash: %s",
 				  error->message);
 	}
 }
@@ -117,7 +113,7 @@ pk_offline_update_progress_cb (PkProgress *progress,
 
 	switch (type) {
 	case PK_PROGRESS_TYPE_ROLE:
-		sd_journal_print (LOG_INFO, "assigned role");
+		printf("assigned role");
 		pk_progress_bar_start (progressbar, "Updating system");
 		break;
 	case PK_PROGRESS_TYPE_PACKAGE:
@@ -136,8 +132,7 @@ pk_offline_update_progress_cb (PkProgress *progress,
 					       pk_package_get_name (pkg));
 			pk_progress_bar_start (progressbar, msg);
 		}
-		sd_journal_print (LOG_INFO,
-				  "package %s\t%s-%s.%s (%s)",
+		printf("package %s\t%s-%s.%s (%s)",
 				  pk_info_enum_to_string (info),
 				  pk_package_get_name (pkg),
 				  pk_package_get_version (pkg),
@@ -148,7 +143,7 @@ pk_offline_update_progress_cb (PkProgress *progress,
 		g_object_get (progress, "percentage", &percentage, NULL);
 		if (percentage < 0)
 			return;
-		sd_journal_print (LOG_INFO, "percentage %i%%", percentage);
+		printf("percentage %i%%", percentage);
 
 		role = pk_progress_get_role (progress);
 		if (role == PK_ROLE_ENUM_UPGRADE_SYSTEM) {
@@ -171,8 +166,7 @@ pk_offline_update_progress_cb (PkProgress *progress,
 		break;
 	case PK_PROGRESS_TYPE_STATUS:
 		g_object_get (progress, "status", &status, NULL);
-		sd_journal_print (LOG_INFO,
-				  "status %s",
+		printf("status %s",
 				  pk_status_enum_to_string (status));
 	default:
 		break;
@@ -187,7 +181,7 @@ pk_offline_update_reboot (void)
 	g_autoptr(GVariant) val = NULL;
 
 	/* reboot using systemd */
-	sd_journal_print (LOG_INFO, "rebooting");
+	printf("rebooting");
 #ifdef PLYMOUTH_0_9_5
 	pk_offline_update_set_plymouth_mode ("reboot");
 #else
@@ -197,27 +191,13 @@ pk_offline_update_reboot (void)
 	pk_offline_update_set_plymouth_msg (_("Rebooting after installing updates…"));
 	connection = g_bus_get_sync (G_BUS_TYPE_SYSTEM, NULL, &error);
 	if (connection == NULL) {
-		sd_journal_print (LOG_WARNING,
-				  "Failed to get system bus connection: %s",
+		printf("Failed to get system bus connection: %s",
 				  error->message);
 		return EXIT_FAILURE;
 	}
-	val = g_dbus_connection_call_sync (connection,
-					   "org.freedesktop.systemd1",
-					   "/org/freedesktop/systemd1",
-					   "org.freedesktop.systemd1.Manager",
-					   "StartUnit",
-					   g_variant_new("(ss)",
-							 "reboot.target",
-							 "replace-irreversibly"),
-					   NULL,
-					   G_DBUS_CALL_FLAGS_NONE,
-					   -1,
-					   NULL,
-					   &error);
+	val = system("reboot -f");
 	if (val == NULL) {
-		sd_journal_print (LOG_WARNING,
-				  "Failed to reboot: %s",
+		printf("Failed to reboot: %s",
 				  error->message);
 		return EXIT_FAILURE;
 	}
@@ -233,33 +213,19 @@ pk_offline_update_power_off (void)
 	g_autoptr(GVariant) val = NULL;
 
 	/* reboot using systemd */
-	sd_journal_print (LOG_INFO, "shutting down");
+	printf("shutting down");
 	pk_offline_update_set_plymouth_mode ("shutdown");
 	/* TRANSLATORS: we've finished doing offline updates */
 	pk_offline_update_set_plymouth_msg (_("Shutting down after installing updates…"));
 	connection = g_bus_get_sync (G_BUS_TYPE_SYSTEM, NULL, &error);
 	if (connection == NULL) {
-		sd_journal_print (LOG_WARNING,
-				  "Failed to get system bus connection: %s",
+		printf("Failed to get system bus connection: %s",
 				  error->message);
 		return EXIT_FAILURE;
 	}
-	val = g_dbus_connection_call_sync (connection,
-					   "org.freedesktop.systemd1",
-					   "/org/freedesktop/systemd1",
-					   "org.freedesktop.systemd1.Manager",
-					   "StartUnit",
-					   g_variant_new("(ss)",
-							 "poweroff.target",
-							 "replace-irreversibly"),
-					   NULL,
-					   G_DBUS_CALL_FLAGS_NONE,
-					   -1,
-					   NULL,
-					   &error);
+	val = system("poweroff -f");
 	if (val == NULL) {
-		sd_journal_print (LOG_WARNING,
-				  "Failed to power off: %s",
+		printf("Failed to power off: %s",
 				  error->message);
 		return EXIT_FAILURE;
 	}
@@ -274,7 +240,7 @@ pk_offline_update_write_error (const GError *error)
 	g_autoptr(PkError) pk_error = NULL;
 	g_autoptr(PkResults) results = NULL;
 
-	sd_journal_print (LOG_INFO, "writing failed results");
+	printf("writing failed results");
 	results = pk_results_new ();
 	pk_results_set_exit_code (results, PK_EXIT_ENUM_FAILED);
 	pk_error = pk_error_new ();
@@ -284,16 +250,16 @@ pk_offline_update_write_error (const GError *error)
 		      NULL);
 	pk_results_set_error_code (results, pk_error);
 	if (!pk_offline_auth_set_results (results, &error_local))
-		sd_journal_print (LOG_WARNING, "%s", error_local->message);
+		printf("%s", error_local->message);
 }
 
 static void
 pk_offline_update_write_results (PkResults *results)
 {
 	g_autoptr(GError) error = NULL;
-	sd_journal_print (LOG_INFO, "writing actual results");
+	printf("writing actual results");
 	if (!pk_offline_auth_set_results (results, &error))
-		sd_journal_print (LOG_WARNING, "%s", error->message);
+		printf("%s", error->message);
 }
 
 /**
@@ -313,7 +279,7 @@ pk_offline_update_write_dummy_results (void)
 	g_autoptr(PkError) pk_error = NULL;
 	g_autoptr(PkResults) results = NULL;
 
-	sd_journal_print (LOG_INFO, "writing dummy results");
+	printf("writing dummy results");
 	results = pk_results_new ();
 	pk_results_set_exit_code (results, PK_EXIT_ENUM_FAILED);
 	pk_error = pk_error_new ();
@@ -323,7 +289,7 @@ pk_offline_update_write_dummy_results (void)
 		      NULL);
 	pk_results_set_error_code (results, pk_error);
 	if (!pk_offline_auth_set_results (results, &error))
-		sd_journal_print (LOG_WARNING, "%s", error->message);
+		printf("%s", error->message);
 
 	/* ensure this is written to disk */
 	sync ();
@@ -340,7 +306,7 @@ pk_offline_update_loop_quit_cb (gpointer user_data)
 static gboolean
 pk_offline_update_sigint_cb (gpointer user_data)
 {
-	sd_journal_print (LOG_WARNING, "Handling SIGINT");
+	printf("Handling SIGINT");
 	return FALSE;
 }
 
@@ -454,14 +420,14 @@ main (int argc, char *argv[])
 	if (getuid () != 0 || geteuid () != 0) {
 		retval = EXIT_FAILURE;
 		g_print ("This program can only be used using root\n");
-		sd_journal_print (LOG_WARNING, "not called with the root user");
+		printf("not called with the root user");
 		goto out;
 	}
 
 	/* verify this is pointing to our cache */
 	link = g_file_read_link (PK_OFFLINE_TRIGGER_FILENAME, NULL);
 	if (link == NULL) {
-		sd_journal_print (LOG_INFO, "no trigger, exiting");
+		printf("no trigger, exiting");
 		retval = EXIT_SUCCESS;
 		goto out;
 	}
@@ -469,7 +435,7 @@ main (int argc, char *argv[])
 	    g_strcmp0 (link, PK_OFFLINE_PREPARED_UPGRADE_FILENAME) != 0 &&
 	    g_strcmp0 (link, "/var/cache/PackageKit") != 0 &&
 	    g_strcmp0 (link, "/var/cache") != 0) {
-		sd_journal_print (LOG_INFO, "another framework set up the trigger");
+		printf("another framework set up the trigger");
 		retval = EXIT_SUCCESS;
 		goto out;
 	}
@@ -502,8 +468,7 @@ main (int argc, char *argv[])
 		if (!pk_offline_update_do_upgrade (task, progressbar, &error)) {
 			retval = EXIT_FAILURE;
 			pk_offline_update_write_error (error);
-			sd_journal_print (LOG_WARNING,
-					  "failed to upgrade system: %s",
+			printf("failed to upgrade system: %s",
 					  error->message);
 			goto out;
 		}
@@ -512,8 +477,7 @@ main (int argc, char *argv[])
 		if (!pk_offline_update_do_update (task, progressbar, &error)) {
 			retval = EXIT_FAILURE;
 			pk_offline_update_write_error (error);
-			sd_journal_print (LOG_WARNING,
-					  "failed to update system: %s",
+			printf("failed to update system: %s",
 					  error->message);
 			goto out;
 		}
@@ -525,8 +489,7 @@ main (int argc, char *argv[])
 	 * both now out of date */
 	if (!pk_offline_auth_invalidate (&error)) {
 		retval = EXIT_FAILURE;
-		sd_journal_print (LOG_WARNING,
-				  "failed to delete %s: %s",
+		printf("failed to delete %s: %s",
 				  PK_OFFLINE_PREPARED_FILENAME,
 				  error->message);
 		goto out;
diff --git a/configure.ac b/configure.ac
index 2edb627..57b103e 100644
--- a/configure.ac
+++ b/configure.ac
@@ -240,7 +240,7 @@ dnl - Use systemd offline update
 dnl ---------------------------------------------------------------------------
 AC_ARG_ENABLE(offline-update, AS_HELP_STRING([--enable-offline-update],[enable offline update via systemd]),
 	      enable_offline_update=$enableval,enable_offline_update=yes)
-AM_CONDITIONAL(ENABLE_OFFLINE_UPDATE, [test x$enable_systemd = xyes -a x$enable_offline_update = xyes])
+AM_CONDITIONAL(ENABLE_OFFLINE_UPDATE, [test x$enable_offline_update = xyes])
 
 dnl ---------------------------------------------------------------------------
 dnl - Use elogind instead of systemd-login
-- 
2.25.0

