diff -ruN prt-get-5.19.1-orig/src/package.cpp prt-get-5.19.1/src/package.cpp
--- prt-get-5.19.1-orig/src/package.cpp	2017-01-21 20:26:27.000000000 +0900
+++ prt-get-5.19.1/src/package.cpp	2019-06-13 02:42:24.023476394 +0900
@@ -148,7 +148,7 @@
 }
 
 /*!
-  load from Pkgfile
+  load from KagamiBuild
 */
 void Package::load() const
 {
@@ -157,7 +157,7 @@
     }
     m_loaded = true;
 
-    string fileName = m_data->path + "/" + m_data->name + "/Pkgfile";
+    string fileName = m_data->path + "/" + m_data->name + "/KagamiBuild";
 
     // c IO is about four times faster then fstream :-(
     FILE* fp = fopen( fileName.c_str(), "r" );
diff -ruN prt-get-5.19.1-orig/src/prtget.cpp prt-get-5.19.1/src/prtget.cpp
--- prt-get-5.19.1-orig/src/prtget.cpp	2017-01-21 20:26:27.000000000 +0900
+++ prt-get-5.19.1/src/prtget.cpp	2019-06-13 02:42:24.019476489 +0900
@@ -1766,7 +1766,7 @@
         string arg = *it;
         const Package* p = m_repo->getPackage( arg );
         if ( p ) {
-            string fileName = "Pkgfile";
+            string fileName = "KagamiBuild";
             if (++it != m_parser->otherArgs().end()) {
                 fileName = *it;
             }
@@ -1838,7 +1838,7 @@
     string arg = *it;
     const Package* p = m_repo->getPackage( arg );
     if ( p ) {
-        string fileName = "Pkgfile";
+        string fileName = "KagamiBuild";
         if (++it != m_parser->otherArgs().end()) {
             fileName = *it;
         }
diff -ruN prt-get-5.19.1-orig/src/repository.cpp prt-get-5.19.1/src/repository.cpp
--- prt-get-5.19.1-orig/src/repository.cpp	2017-01-21 20:26:27.000000000 +0900
+++ prt-get-5.19.1/src/repository.cpp	2019-06-13 02:42:24.019476489 +0900
@@ -90,7 +90,7 @@
 /*!
   Search packages for a match of \a pattern in name, and description of
   \a searchDesc is true.
-  \note Name searches can often done without opening the Pkgfiles, but not
+  \note Name searches can often done without opening the KagamiBuilds, but not
   description search. Therefore, the later is much slower
 
   \param pattern the pattern to be found
@@ -101,7 +101,7 @@
 void Repository::searchMatchingPackages( const string& pattern,
                                          list<Package*>& target,
                                          bool searchDesc ) const
-    // note: searchDesc true will read _every_ Pkgfile
+    // note: searchDesc true will read _every_ KagamiBuild
 {
     map<string, Package*>::const_iterator it = m_packageMap.begin();
     if (m_useRegex) {
@@ -199,9 +199,9 @@
 
             // TODO: review this
             struct stat buf;
-            if ( stat( (path + "/" + name + "/Pkgfile").c_str(), &buf )
+            if ( stat( (path + "/" + name + "/KagamiBuild").c_str(), &buf )
                  != 0 ) {
-                // no Pkgfile -> no port
+                // no KagamiBuild -> no port
                 continue;
             }
 
@@ -430,7 +430,7 @@
         if ( pit != m_packageMap.end() ) {
             Package* p = pit->second;
             if (p->dependencies().length() == 0) {
-                // only use if no dependencies in Pkgfile
+                // only use if no dependencies in KagamiBuild
                 p->setDependencies(it->second);
             }
         }
