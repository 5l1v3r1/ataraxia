diff -ruN ocaml-4.10.0-orig/asmcomp/power/arch.ml ocaml-4.10.0/asmcomp/power/arch.ml
--- ocaml-4.10.0-orig/asmcomp/power/arch.ml	2020-02-21 22:50:54.000000000 +0900
+++ ocaml-4.10.0/asmcomp/power/arch.ml	2020-02-29 20:37:16.371177474 +0900
@@ -28,7 +28,7 @@
 let abi =
   match Config.model with
   | "ppc" -> ELF32
-  | "ppc64" -> ELF64v1
+  | "ppc64" -> ELF64v2
   | "ppc64le" -> ELF64v2
   | _ -> assert false
 
diff -ruN ocaml-4.10.0-orig/runtime/caml/stack.h ocaml-4.10.0/runtime/caml/stack.h
--- ocaml-4.10.0-orig/runtime/caml/stack.h	2020-02-21 22:50:54.000000000 +0900
+++ ocaml-4.10.0/runtime/caml/stack.h	2020-02-29 20:37:03.928475107 +0900
@@ -35,10 +35,10 @@
 #if defined(MODEL_ppc)
 #define Saved_return_address(sp) *((intnat *)((sp) - 4))
 #define Callback_link(sp) ((struct caml_context *)((sp) + 16))
-#elif defined(MODEL_ppc64)
+#elif _CALL_ELF == 1
 #define Saved_return_address(sp) *((intnat *)((sp) + 16))
 #define Callback_link(sp) ((struct caml_context *)((sp) + (48 + 32)))
-#elif defined(MODEL_ppc64le)
+#elif _CALL_ELF == 2
 #define Saved_return_address(sp) *((intnat *)((sp) + 16))
 #define Callback_link(sp) ((struct caml_context *)((sp) + (32 + 32)))
 #else
diff -ruN ocaml-4.10.0-orig/runtime/power.S ocaml-4.10.0/runtime/power.S
--- ocaml-4.10.0-orig/runtime/power.S	2020-02-21 22:50:54.000000000 +0900
+++ ocaml-4.10.0/runtime/power.S	2020-02-29 20:36:33.818195353 +0900
@@ -52,8 +52,7 @@
 #define TRAP_PREVIOUS_OFFSET 4
 #define CALLBACK_LINK_SIZE 16
 #define CALLBACK_LINK_OFFSET 0
-#endif
-#if defined(MODEL_ppc64)
+#elif _CALL_ELF == 1
 #define RESERVED_STACK 48
 #define PARAM_SAVE_AREA (8*8)
 #define LR_SAVE 16
@@ -64,8 +63,7 @@
 #define TRAP_PREVIOUS_OFFSET 64
 #define CALLBACK_LINK_SIZE 32
 #define CALLBACK_LINK_OFFSET 48
-#endif
-#if defined(MODEL_ppc64le)
+#elif _CALL_ELF == 2
 #define RESERVED_STACK 32
 #define PARAM_SAVE_AREA 0
 #define LR_SAVE 16
@@ -91,9 +89,7 @@
 #define ENDFUNCTION(name) \
   .size name, . - name
 
-#endif
-
-#if defined(MODEL_ppc64)
+#elif _CALL_ELF == 1
 #define FUNCTION(name) \
   .section ".opd","aw"; \
   .align 3; \
@@ -107,9 +103,7 @@
 #define ENDFUNCTION(name) \
   .size name, . - .L.name
 
-#endif
-
-#if defined(MODEL_ppc64le)
+#elif _CALL_ELF == 2
 #define FUNCTION(name) \
   .section ".text"; \
   .globl name; \
@@ -151,7 +145,7 @@
 
 #define Caml_state(var) 8*domain_field_caml_##var(28)
 
-#if defined(MODEL_ppc64)
+#if _CALL_ELF == 1
         .section ".opd","aw"
 #else
         .section ".text"
@@ -332,14 +326,14 @@
 #if defined(MODEL_ppc)
         mtctr   C_CALL_FUN
         bctrl
-#elif defined(MODEL_ppc64)
+#elif _CALL_ELF == 1
         ld      0, 0(C_CALL_FUN)
         mr      C_CALL_TOC, 2   /* save current TOC in a callee-save register */
         mtctr   0
         ld      2, 8(C_CALL_FUN)
         bctrl
         mr      2, C_CALL_TOC   /* restore current TOC */
-#elif defined(MODEL_ppc64le)
+#elif _CALL_ELF == 2
         mtctr   C_CALL_FUN
         mr      12, C_CALL_FUN
         mr      C_CALL_TOC, 2   /* save current TOC in a callee-save register */
@@ -515,14 +509,14 @@
 #if defined(MODEL_ppc)
         mtctr   12
 .L105:  bctrl
-#elif defined(MODEL_ppc64)
+#elif _CALL_ELF == 1
         ld      0, 0(12)
         mtctr   0
         std     2, TOC_SAVE(1)
         ld      2, 8(12)
 .L105:  bctrl
         ld      2, TOC_SAVE(1)
-#elif defined(MODEL_ppc64le)
+#elif _CALL_ELF == 2
         mtctr   12
         std     2, TOC_SAVE(1)
 .L105:  bctrl
@@ -641,7 +635,7 @@
         b       .L102
 ENDFUNCTION(caml_callback3_asm)
 
-#if defined(MODEL_ppc64)
+#if _CALL_ELF == 1
         .section ".opd","aw"
 #else
         .section ".text"
