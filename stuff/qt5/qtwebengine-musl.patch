diff -ruN qt-everywhere-src-5.13.0/qtwebengine/src/3rdparty/chromium/base/allocator/allocator_shim_default_dispatch_to_glibc.cc qt-everywhere-src-5.13.0-orig/qtwebengine/src/3rdparty/chromium/base/allocator/allocator_shim_default_dispatch_to_glibc.cc
--- qt-everywhere-src-5.13.0/qtwebengine/src/3rdparty/chromium/base/allocator/allocator_shim_default_dispatch_to_glibc.cc	2019-08-05 00:51:23.158958068 +0900
+++ qt-everywhere-src-5.13.0-orig/qtwebengine/src/3rdparty/chromium/base/allocator/allocator_shim_default_dispatch_to_glibc.cc	2019-05-23 21:39:34.000000000 +0900
@@ -6,7 +6,6 @@
 
 #include <malloc.h>
 
-#if defined(__GLIBC__)
 // This translation unit defines a default dispatch for the allocator shim which
 // routes allocations to libc functions.
 // The code here is strongly inspired from tcmalloc's libc_override_glibc.h.
@@ -77,92 +76,3 @@
     nullptr,               /* aligned_free_function */
     nullptr,               /* next */
 };
-
-#else // defined(__GLIBC__)
-
-#include <dlfcn.h>
-
-extern "C" {
-// Declare function pointers to the memory functions
-typedef void* (*t_libc_malloc)(size_t size);
-typedef void* (*t_libc_calloc)(size_t n, size_t size);
-typedef void* (*t_libc_realloc)(void* address, size_t size);
-typedef void* (*t_libc_memalign)(size_t alignment, size_t size);
-typedef void (*t_libc_free)(void* ptr);
-typedef size_t (*t_libc_malloc_usable_size)(void* ptr);
-
-// Static instances of pointers to libc.so dl symbols
-static t_libc_malloc libc_malloc = NULL;
-static t_libc_calloc libc_calloc = NULL;
-static t_libc_realloc libc_realloc = NULL;
-static t_libc_memalign libc_memalign = NULL;
-static t_libc_free libc_free = NULL;
-static t_libc_malloc_usable_size libc_malloc_usable_size = NULL;
-
-// resolve the symbols in libc.so
-void musl_libc_memory_init(void)
-{
-  libc_malloc = (t_libc_malloc) dlsym(RTLD_NEXT, "malloc");
-  libc_calloc = (t_libc_calloc) dlsym(RTLD_NEXT, "calloc");
-  libc_realloc = (t_libc_realloc) dlsym(RTLD_NEXT, "realloc");
-  libc_memalign = (t_libc_memalign) dlsym(RTLD_NEXT, "memalign");
-  libc_free = (t_libc_free) dlsym(RTLD_NEXT, "free");
-  libc_malloc_usable_size = (t_libc_malloc_usable_size) dlsym(RTLD_NEXT, "malloc_usable_size");
-}
-}  // extern "C"
-
-namespace {
-
-using base::allocator::AllocatorDispatch;
-
-void* MuslMalloc(const AllocatorDispatch*, size_t size, void* context) {
-  if (!libc_malloc)
-    musl_libc_memory_init();
-  return (*libc_malloc)(size);
-}
-
-void* MuslCalloc(const AllocatorDispatch*, size_t n, size_t size, void* context) {
-  if (!libc_calloc)
-    musl_libc_memory_init();
-  return (*libc_calloc)(n, size);
-}
-
-void* MuslRealloc(const AllocatorDispatch*, void* address, size_t size, void* context) {
-  if (!libc_realloc)
-    musl_libc_memory_init();
-  return (*libc_realloc)(address, size);
-}
-
-void* MuslMemalign(const AllocatorDispatch*, size_t alignment, size_t size, void* context) {
-  if (!libc_memalign)
-    musl_libc_memory_init();
-  return (*libc_memalign)(alignment, size);
-}
-
-void MuslFree(const AllocatorDispatch*, void* address, void* context) {
-  if (!libc_free)
-    musl_libc_memory_init();
-  (*libc_free)(address);
-}
-
-size_t MuslGetSizeEstimate(const AllocatorDispatch*, void* address, void* context) {
-  // TODO(siggi, primiano): malloc_usable_size may need redirection in the
-  //     presence of interposing shims that divert allocations.
-  if (!libc_malloc_usable_size)
-    musl_libc_memory_init();
-  return (*libc_malloc_usable_size)(address);
-}
-
-}  // namespace
-
-const AllocatorDispatch AllocatorDispatch::default_dispatch = {
-    &MuslMalloc,           /* alloc_function */
-    &MuslCalloc,           /* alloc_zero_initialized_function */
-    &MuslMemalign,         /* alloc_aligned_function */
-    &MuslRealloc,          /* realloc_function */
-    &MuslFree,             /* free_function */
-    &MuslGetSizeEstimate,  /* get_size_estimate_function */
-    nullptr,               /* next */
-};
-
-#endif
diff -ruN qt-everywhere-src-5.13.0/qtwebengine/src/3rdparty/chromium/base/debug/stack_trace.cc qt-everywhere-src-5.13.0-orig/qtwebengine/src/3rdparty/chromium/base/debug/stack_trace.cc
--- qt-everywhere-src-5.13.0/qtwebengine/src/3rdparty/chromium/base/debug/stack_trace.cc	2019-08-05 00:59:18.792001769 +0900
+++ qt-everywhere-src-5.13.0-orig/qtwebengine/src/3rdparty/chromium/base/debug/stack_trace.cc	2019-05-23 21:39:34.000000000 +0900
@@ -233,7 +233,7 @@
 }
 std::string StackTrace::ToStringWithPrefix(const char* prefix_string) const {
   std::stringstream stream;
-#if defined(__GLIBC__) && !defined(_AIX)
+#if !defined(__UCLIBC__) && !defined(_AIX)
   OutputToStreamWithPrefix(&stream, prefix_string);
 #endif
   return stream.str();
diff -ruN qt-everywhere-src-5.13.0/qtwebengine/src/3rdparty/chromium/base/debug/stack_trace_posix.cc qt-everywhere-src-5.13.0-orig/qtwebengine/src/3rdparty/chromium/base/debug/stack_trace_posix.cc
--- qt-everywhere-src-5.13.0/qtwebengine/src/3rdparty/chromium/base/debug/stack_trace_posix.cc	2019-08-05 01:01:29.455013774 +0900
+++ qt-everywhere-src-5.13.0-orig/qtwebengine/src/3rdparty/chromium/base/debug/stack_trace_posix.cc	2019-05-23 21:39:34.000000000 +0900
@@ -27,7 +27,7 @@
 #if !defined(USE_SYMBOLIZE)
 #include <cxxabi.h>
 #endif
-#if defined(__GLIBC__) && !defined(_AIX)
+#if !defined(__UCLIBC__) && !defined(_AIX)
 #include <execinfo.h>
 #endif
 
@@ -86,7 +86,7 @@
   // Note: code in this function is NOT async-signal safe (std::string uses
   // malloc internally).
 
-#if defined(__GLIBC__) && !defined(_AIX)
+#if !defined(__UCLIBC__) && !defined(_AIX)
   std::string::size_type search_from = 0;
   while (search_from < text->size()) {
     // Look for the start of a mangled symbol, from search_from.
@@ -121,7 +121,7 @@
       search_from = mangled_start + 2;
     }
   }
-#endif  // !defined(__GLIBC__) && !defined(_AIX)
+#endif  // !defined(__UCLIBC__) && !defined(_AIX)
 }
 #endif  // !defined(USE_SYMBOLIZE)
 
@@ -133,7 +133,7 @@
   virtual ~BacktraceOutputHandler() = default;
 };
 
-#if defined(__GLIBC__) && !defined(_AIX)
+#if !defined(__UCLIBC__) && !defined(_AIX)
 void OutputPointer(void* pointer, BacktraceOutputHandler* handler) {
   // This should be more than enough to store a 64-bit number in hex:
   // 16 hex digits + 1 for null-terminator.
@@ -812,7 +812,7 @@
   // NOTE: This code MUST be async-signal safe (it's used by in-process
   // stack dumping signal handler). NO malloc or stdio is allowed here.
 
-#if defined(__GLIBC__) && !defined(_AIX)
+#if !defined(__UCLIBC__) && !defined(_AIX)
   // Though the backtrace API man page does not list any possible negative
   // return values, we take no chance.
   return base::saturated_cast<size_t>(backtrace(trace, count));
@@ -825,13 +825,13 @@
 // NOTE: This code MUST be async-signal safe (it's used by in-process
 // stack dumping signal handler). NO malloc or stdio is allowed here.
 
-#if defined(__GLIBC__) && !defined(_AIX)
+#if !defined(__UCLIBC__) && !defined(_AIX)
   PrintBacktraceOutputHandler handler;
   ProcessBacktrace(trace_, count_, prefix_string, &handler);
 #endif
 }
 
-#if defined(__GLIBC__) && !defined(_AIX)
+#if !defined(__UCLIBC__) && !defined(_AIX)
 void StackTrace::OutputToStreamWithPrefix(std::ostream* os,
                                           const char* prefix_string) const {
   StreamBacktraceOutputHandler handler(os);
diff -ruN qt-everywhere-src-5.13.0/qtwebengine/src/3rdparty/chromium/base/logging.cc qt-everywhere-src-5.13.0-orig/qtwebengine/src/3rdparty/chromium/base/logging.cc
--- qt-everywhere-src-5.13.0/qtwebengine/src/3rdparty/chromium/base/logging.cc	2019-08-05 00:53:35.675970244 +0900
+++ qt-everywhere-src-5.13.0-orig/qtwebengine/src/3rdparty/chromium/base/logging.cc	2019-05-23 21:39:34.000000000 +0900
@@ -584,7 +584,7 @@
 
 LogMessage::~LogMessage() {
   size_t stack_start = stream_.tellp();
-#if !defined(OFFICIAL_BUILD) && !defined(OS_NACL) && defined(__GLIBC__) && \
+#if !defined(OFFICIAL_BUILD) && !defined(OS_NACL) && !defined(__UCLIBC__) && \
     !defined(OS_AIX)
   if (severity_ == LOG_FATAL && !base::debug::BeingDebugged()) {
     // Include a stack trace on a fatal, unless a debugger is attached.
diff -ruN qt-everywhere-src-5.13.0/qtwebengine/src/3rdparty/chromium/base/process/process_metrics_posix.cc qt-everywhere-src-5.13.0-orig/qtwebengine/src/3rdparty/chromium/base/process/process_metrics_posix.cc
--- qt-everywhere-src-5.13.0/qtwebengine/src/3rdparty/chromium/base/process/process_metrics_posix.cc	2019-08-05 01:04:16.883029157 +0900
+++ qt-everywhere-src-5.13.0-orig/qtwebengine/src/3rdparty/chromium/base/process/process_metrics_posix.cc	2019-05-23 21:39:34.000000000 +0900
@@ -100,7 +100,7 @@
   malloc_statistics_t stats = {0};
   malloc_zone_statistics(nullptr, &stats);
   return stats.size_in_use;
-#elif (defined(OS_LINUX) && defined(__GLIBC__)) || defined(OS_ANDROID)
+#elif defined(OS_LINUX) || defined(OS_ANDROID)
   struct mallinfo minfo = mallinfo();
 #if defined(USE_TCMALLOC)
   return minfo.uordblks;
diff -ruN qt-everywhere-src-5.13.0/qtwebengine/src/3rdparty/chromium/base/trace_event/malloc_dump_provider.cc qt-everywhere-src-5.13.0-orig/qtwebengine/src/3rdparty/chromium/base/trace_event/malloc_dump_provider.cc
--- qt-everywhere-src-5.13.0/qtwebengine/src/3rdparty/chromium/base/trace_event/malloc_dump_provider.cc	2019-08-05 01:03:59.463027557 +0900
+++ qt-everywhere-src-5.13.0-orig/qtwebengine/src/3rdparty/chromium/base/trace_event/malloc_dump_provider.cc	2019-05-23 21:39:34.000000000 +0900
@@ -132,7 +132,7 @@
   }
 #elif defined(OS_FUCHSIA)
 // TODO(fuchsia): Port, see https://crbug.com/706592.
-#elif defined(__GLIBC__)
+#else
   struct mallinfo info = mallinfo();
   DCHECK_GE(info.arena + info.hblkhd, info.uordblks);
 
@@ -144,8 +144,6 @@
 
   // Total allocated space is given by |uordblks|.
   allocated_objects_size = info.uordblks;
-#else
-// musl libc does not support mallinfo()
 #endif
 
   MemoryAllocatorDump* outer_dump = pmd->CreateAllocatorDump("malloc");
diff -ruN qt-everywhere-src-5.13.0/qtwebengine/src/3rdparty/chromium/net/dns/dns_config_service_posix.cc qt-everywhere-src-5.13.0-orig/qtwebengine/src/3rdparty/chromium/net/dns/dns_config_service_posix.cc
--- qt-everywhere-src-5.13.0/qtwebengine/src/3rdparty/chromium/net/dns/dns_config_service_posix.cc	2019-08-05 01:07:56.495049335 +0900
+++ qt-everywhere-src-5.13.0-orig/qtwebengine/src/3rdparty/chromium/net/dns/dns_config_service_posix.cc	2019-05-23 21:39:34.000000000 +0900
@@ -8,10 +8,6 @@
 #include <string>
 #include <type_traits>
 
-#if !defined(__GLIBC__)
-#include "resolv_compat.h"
-#endif
-
 #include "base/bind.h"
 #include "base/files/file.h"
 #include "base/files/file_path.h"
diff -ruN qt-everywhere-src-5.13.0/qtwebengine/src/3rdparty/chromium/net/dns/dns_reloader.cc qt-everywhere-src-5.13.0-orig/qtwebengine/src/3rdparty/chromium/net/dns/dns_reloader.cc
--- qt-everywhere-src-5.13.0/qtwebengine/src/3rdparty/chromium/net/dns/dns_reloader.cc	2019-08-05 01:07:36.693047515 +0900
+++ qt-everywhere-src-5.13.0-orig/qtwebengine/src/3rdparty/chromium/net/dns/dns_reloader.cc	2019-05-23 21:39:34.000000000 +0900
@@ -9,10 +9,6 @@
 
 #include <resolv.h>
 
-#if !defined(__GLIBC__)
-#include "resolv_compat.h"
-#endif
-
 #include "base/lazy_instance.h"
 #include "base/logging.h"
 #include "base/macros.h"
diff -ruN qt-everywhere-src-5.13.0/qtwebengine/src/3rdparty/chromium/net/dns/resolv_compat.h qt-everywhere-src-5.13.0-orig/qtwebengine/src/3rdparty/chromium/net/dns/resolv_compat.h
--- qt-everywhere-src-5.13.0/qtwebengine/src/3rdparty/chromium/net/dns/resolv_compat.h	2019-08-05 01:08:22.324051708 +0900
+++ qt-everywhere-src-5.13.0-orig/qtwebengine/src/3rdparty/chromium/net/dns/resolv_compat.h	1970-01-01 09:00:00.000000000 +0900
@@ -1,31 +0,0 @@
-#if !defined(__GLIBC__)
-/***************************************************************************
- * resolv_compat.h
- *
- * Mimick GLIBC's res_ninit() and res_nclose() for musl libc
- * Note: res_init() is actually deprecated according to
- * http://docs.oracle.com/cd/E36784_01/html/E36875/res-nclose-3resolv.html
- **************************************************************************/
-#include <string.h>
-
-static inline int res_ninit(res_state statp)
-{
-	int rc = res_init();
-	if (statp != &_res) {
-		memcpy(statp, &_res, sizeof(*statp));
-	}
-	return rc;
-}
-
-static inline int res_nclose(res_state statp)
-{
-	if (!statp)
-		return -1;
-	if (statp != &_res) {
-		memset(statp, 0, sizeof(*statp));
-	}
-	return 0;
-}
-#endif
-
-
diff -ruN qt-everywhere-src-5.13.0/qtwebengine/src/3rdparty/chromium/ppapi/utility/threading/simple_thread.cc qt-everywhere-src-5.13.0-orig/qtwebengine/src/3rdparty/chromium/ppapi/utility/threading/simple_thread.cc
--- qt-everywhere-src-5.13.0/qtwebengine/src/3rdparty/chromium/ppapi/utility/threading/simple_thread.cc	2019-08-05 01:11:59.290071643 +0900
+++ qt-everywhere-src-5.13.0-orig/qtwebengine/src/3rdparty/chromium/ppapi/utility/threading/simple_thread.cc	2019-05-23 21:39:34.000000000 +0900
@@ -13,7 +13,7 @@
 namespace {
 
 // Use 2MB default stack size for Native Client, otherwise use system default.
-#if defined(__native_client__) || !defined(__GLIBC__)
+#if defined(__native_client__)
 const size_t kDefaultStackSize = 2 * 1024 * 1024;
 #else
 const size_t kDefaultStackSize = 0;
diff -ruN qt-everywhere-src-5.13.0/qtwebengine/src/3rdparty/chromium/sandbox/linux/seccomp-bpf/trap.cc qt-everywhere-src-5.13.0-orig/qtwebengine/src/3rdparty/chromium/sandbox/linux/seccomp-bpf/trap.cc
--- qt-everywhere-src-5.13.0/qtwebengine/src/3rdparty/chromium/sandbox/linux/seccomp-bpf/trap.cc	2019-08-05 01:09:50.774059835 +0900
+++ qt-everywhere-src-5.13.0-orig/qtwebengine/src/3rdparty/chromium/sandbox/linux/seccomp-bpf/trap.cc	2019-05-23 21:39:34.000000000 +0900
@@ -25,11 +25,6 @@
 #include "sandbox/linux/system_headers/linux_seccomp.h"
 #include "sandbox/linux/system_headers/linux_signal.h"
 
-// musl libc defines siginfo_t __si_fields instead of _sifields
-#if !defined(__GLIBC__)
-#define _sifields __si_fields
-#endif
-
 namespace {
 
 struct arch_sigsys {
diff -ruN qt-everywhere-src-5.13.0/qtwebengine/src/3rdparty/chromium/sandbox/linux/seccomp-bpf-helpers/syscall_parameters_restrictions.cc qt-everywhere-src-5.13.0-orig/qtwebengine/src/3rdparty/chromium/sandbox/linux/seccomp-bpf-helpers/syscall_parameters_restrictions.cc
--- qt-everywhere-src-5.13.0/qtwebengine/src/3rdparty/chromium/sandbox/linux/seccomp-bpf-helpers/syscall_parameters_restrictions.cc	2019-08-05 00:44:36.877920740 +0900
+++ qt-everywhere-src-5.13.0-orig/qtwebengine/src/3rdparty/chromium/sandbox/linux/seccomp-bpf-helpers/syscall_parameters_restrictions.cc	2019-05-23 21:39:34.000000000 +0900
@@ -137,13 +137,23 @@
 // CLONE_VM, nor CLONE_THREAD, which includes all fork() implementations.
 ResultExpr RestrictCloneToThreadsAndEPERMFork() {
   const Arg<unsigned long> flags(0);
-  const int required = CLONE_VM | CLONE_FS | CLONE_FILES | CLONE_SIGHAND |
-                       CLONE_THREAD | CLONE_SYSVSEM;
-  const int safe = CLONE_SETTLS | CLONE_PARENT_SETTID | CLONE_CHILD_CLEARTID |
-                   CLONE_DETACHED;
-  const BoolExpr thread_clone_ok = (flags&~safe)==required;
 
-  return If(thread_clone_ok, Allow())
+  // TODO(mdempsky): Extend DSL to support (flags & ~mask1) == mask2.
+  const uint64_t kAndroidCloneMask = CLONE_VM | CLONE_FS | CLONE_FILES |
+                                     CLONE_SIGHAND | CLONE_THREAD |
+                                     CLONE_SYSVSEM;
+  const uint64_t kObsoleteAndroidCloneMask = kAndroidCloneMask | CLONE_DETACHED;
+
+  const uint64_t kGlibcPthreadFlags =
+      CLONE_VM | CLONE_FS | CLONE_FILES | CLONE_SIGHAND | CLONE_THREAD |
+      CLONE_SYSVSEM | CLONE_SETTLS | CLONE_PARENT_SETTID | CLONE_CHILD_CLEARTID;
+  const BoolExpr glibc_test = flags == kGlibcPthreadFlags;
+
+  const BoolExpr android_test =
+      AnyOf(flags == kAndroidCloneMask, flags == kObsoleteAndroidCloneMask,
+            flags == kGlibcPthreadFlags);
+
+  return If(IsAndroid() ? android_test : glibc_test, Allow())
       .ElseIf((flags & (CLONE_VM | CLONE_THREAD)) == 0, Error(EPERM))
       .Else(CrashSIGSYSClone());
 }
diff -ruN qt-everywhere-src-5.13.0/qtwebengine/src/3rdparty/chromium/sandbox/linux/seccomp-bpf-helpers/syscall_sets.cc qt-everywhere-src-5.13.0-orig/qtwebengine/src/3rdparty/chromium/sandbox/linux/seccomp-bpf-helpers/syscall_sets.cc
--- qt-everywhere-src-5.13.0/qtwebengine/src/3rdparty/chromium/sandbox/linux/seccomp-bpf-helpers/syscall_sets.cc	2019-08-05 00:45:44.203926925 +0900
+++ qt-everywhere-src-5.13.0-orig/qtwebengine/src/3rdparty/chromium/sandbox/linux/seccomp-bpf-helpers/syscall_sets.cc	2019-05-23 21:39:34.000000000 +0900
@@ -391,7 +391,6 @@
 #if defined(__i386__)
     case __NR_waitpid:
 #endif
-    case __NR_set_tid_address:
       return true;
     case __NR_clone:  // Should be parameter-restricted.
     case __NR_setns:  // Privileged.
@@ -404,6 +403,7 @@
 #if defined(__i386__) || defined(__x86_64__) || defined(__mips__)
     case __NR_set_thread_area:
 #endif
+    case __NR_set_tid_address:
     case __NR_unshare:
 #if !defined(__mips__) && !defined(__aarch64__)
     case __NR_vfork:
@@ -513,8 +513,6 @@
     case __NR_mlock:
     case __NR_munlock:
     case __NR_munmap:
-    case __NR_mremap:
-    case __NR_membarrier:
       return true;
     case __NR_madvise:
     case __NR_mincore:
@@ -532,6 +530,7 @@
     case __NR_modify_ldt:
 #endif
     case __NR_mprotect:
+    case __NR_mremap:
     case __NR_msync:
     case __NR_munlockall:
     case __NR_readahead:
diff -ruN qt-everywhere-src-5.13.0/qtwebengine/src/3rdparty/chromium/sandbox/linux/system_headers/arm64_linux_syscalls.h qt-everywhere-src-5.13.0-orig/qtwebengine/src/3rdparty/chromium/sandbox/linux/system_headers/arm64_linux_syscalls.h
--- qt-everywhere-src-5.13.0/qtwebengine/src/3rdparty/chromium/sandbox/linux/system_headers/arm64_linux_syscalls.h	2019-08-05 00:47:17.068935458 +0900
+++ qt-everywhere-src-5.13.0-orig/qtwebengine/src/3rdparty/chromium/sandbox/linux/system_headers/arm64_linux_syscalls.h	2019-05-23 21:39:34.000000000 +0900
@@ -1063,8 +1063,4 @@
 #define __NR_memfd_create 279
 #endif
 
-#if !defined(__NR_membarrier)
-#define __NR_membarrier 283
-#endif
-
 #endif  // SANDBOX_LINUX_SYSTEM_HEADERS_ARM64_LINUX_SYSCALLS_H_
diff -ruN qt-everywhere-src-5.13.0/qtwebengine/src/3rdparty/chromium/sandbox/linux/system_headers/arm_linux_syscalls.h qt-everywhere-src-5.13.0-orig/qtwebengine/src/3rdparty/chromium/sandbox/linux/system_headers/arm_linux_syscalls.h
--- qt-everywhere-src-5.13.0/qtwebengine/src/3rdparty/chromium/sandbox/linux/system_headers/arm_linux_syscalls.h	2019-08-05 00:47:33.212936941 +0900
+++ qt-everywhere-src-5.13.0-orig/qtwebengine/src/3rdparty/chromium/sandbox/linux/system_headers/arm_linux_syscalls.h	2019-05-23 21:39:34.000000000 +0900
@@ -1385,10 +1385,6 @@
 #define __NR_memfd_create (__NR_SYSCALL_BASE+385)
 #endif
 
-#if !defined(__NR_membarrier)
-#define __NR_membarrier (__NR_SYSCALL_BASE+389)
-#endif
-
 // ARM private syscalls.
 #if !defined(__ARM_NR_BASE)
 #define __ARM_NR_BASE (__NR_SYSCALL_BASE + 0xF0000)
diff -ruN qt-everywhere-src-5.13.0/qtwebengine/src/3rdparty/chromium/sandbox/linux/system_headers/mips64_linux_syscalls.h qt-everywhere-src-5.13.0-orig/qtwebengine/src/3rdparty/chromium/sandbox/linux/system_headers/mips64_linux_syscalls.h
--- qt-everywhere-src-5.13.0/qtwebengine/src/3rdparty/chromium/sandbox/linux/system_headers/mips64_linux_syscalls.h	2019-08-05 00:47:55.437938983 +0900
+++ qt-everywhere-src-5.13.0-orig/qtwebengine/src/3rdparty/chromium/sandbox/linux/system_headers/mips64_linux_syscalls.h	2019-05-23 21:39:34.000000000 +0900
@@ -1271,8 +1271,4 @@
 #define __NR_memfd_create (__NR_Linux + 314)
 #endif
 
-#if !defined(__NR_membarrier)
-#define __NR_membarrier (__NR_Linux + 318)
-#endif
-
 #endif  // SANDBOX_LINUX_SYSTEM_HEADERS_MIPS64_LINUX_SYSCALLS_H_
diff -ruN qt-everywhere-src-5.13.0/qtwebengine/src/3rdparty/chromium/sandbox/linux/system_headers/mips_linux_syscalls.h qt-everywhere-src-5.13.0-orig/qtwebengine/src/3rdparty/chromium/sandbox/linux/system_headers/mips_linux_syscalls.h
--- qt-everywhere-src-5.13.0/qtwebengine/src/3rdparty/chromium/sandbox/linux/system_headers/mips_linux_syscalls.h	2019-08-05 00:48:14.885940770 +0900
+++ qt-everywhere-src-5.13.0-orig/qtwebengine/src/3rdparty/chromium/sandbox/linux/system_headers/mips_linux_syscalls.h	2019-05-23 21:39:34.000000000 +0900
@@ -1433,8 +1433,4 @@
 #define __NR_memfd_create (__NR_Linux + 354)
 #endif
 
-#if !defined(__NR_membarrier)
-#define __NR_membarrier (__NR_Linux + 358)
-#endif
-
 #endif  // SANDBOX_LINUX_SYSTEM_HEADERS_MIPS_LINUX_SYSCALLS_H_
diff -ruN qt-everywhere-src-5.13.0/qtwebengine/src/3rdparty/chromium/sandbox/linux/system_headers/x86_32_linux_syscalls.h qt-everywhere-src-5.13.0-orig/qtwebengine/src/3rdparty/chromium/sandbox/linux/system_headers/x86_32_linux_syscalls.h
--- qt-everywhere-src-5.13.0/qtwebengine/src/3rdparty/chromium/sandbox/linux/system_headers/x86_32_linux_syscalls.h	2019-08-05 00:48:36.770942781 +0900
+++ qt-everywhere-src-5.13.0-orig/qtwebengine/src/3rdparty/chromium/sandbox/linux/system_headers/x86_32_linux_syscalls.h	2019-05-23 21:39:34.000000000 +0900
@@ -1422,9 +1422,5 @@
 #define __NR_memfd_create 356
 #endif
 
-#if !defined(__NR_membarrier)
-#define __NR_membarrier 375
-#endif
-
 #endif  // SANDBOX_LINUX_SYSTEM_HEADERS_X86_32_LINUX_SYSCALLS_H_
 
diff -ruN qt-everywhere-src-5.13.0/qtwebengine/src/3rdparty/chromium/sandbox/linux/system_headers/x86_64_linux_syscalls.h qt-everywhere-src-5.13.0-orig/qtwebengine/src/3rdparty/chromium/sandbox/linux/system_headers/x86_64_linux_syscalls.h
--- qt-everywhere-src-5.13.0/qtwebengine/src/3rdparty/chromium/sandbox/linux/system_headers/x86_64_linux_syscalls.h	2019-08-05 00:49:03.529945239 +0900
+++ qt-everywhere-src-5.13.0-orig/qtwebengine/src/3rdparty/chromium/sandbox/linux/system_headers/x86_64_linux_syscalls.h	2019-05-23 21:39:34.000000000 +0900
@@ -1290,9 +1290,5 @@
 #define __NR_memfd_create 319
 #endif
 
-#if !defined(__NR_membarrier)
-#define __NR_membarrier 324
-#endif
-
 #endif  // SANDBOX_LINUX_SYSTEM_HEADERS_X86_64_LINUX_SYSCALLS_H_
 
diff -ruN qt-everywhere-src-5.13.0/qtwebengine/src/3rdparty/chromium/services/device/serial/serial_io_handler_posix.cc qt-everywhere-src-5.13.0-orig/qtwebengine/src/3rdparty/chromium/services/device/serial/serial_io_handler_posix.cc
--- qt-everywhere-src-5.13.0/qtwebengine/src/3rdparty/chromium/services/device/serial/serial_io_handler_posix.cc	2019-08-05 01:09:17.204056750 +0900
+++ qt-everywhere-src-5.13.0-orig/qtwebengine/src/3rdparty/chromium/services/device/serial/serial_io_handler_posix.cc	2019-05-23 21:39:34.000000000 +0900
@@ -17,9 +17,6 @@
 #if defined(OS_LINUX)
 #include <asm-generic/ioctls.h>
 #include <linux/serial.h>
-#if !defined(__GLIBC__)
-#include <asm-generic/ioctls.h>
-#endif
 
 // The definition of struct termios2 is copied from asm-generic/termbits.h
 // because including that header directly conflicts with termios.h.
diff -ruN qt-everywhere-src-5.13.0/qtwebengine/src/3rdparty/chromium/third_party/blink/renderer/platform/wtf/assertions.cc qt-everywhere-src-5.13.0-orig/qtwebengine/src/3rdparty/chromium/third_party/blink/renderer/platform/wtf/assertions.cc
--- qt-everywhere-src-5.13.0/qtwebengine/src/3rdparty/chromium/third_party/blink/renderer/platform/wtf/assertions.cc	2019-08-05 00:52:26.728963909 +0900
+++ qt-everywhere-src-5.13.0-orig/qtwebengine/src/3rdparty/chromium/third_party/blink/renderer/platform/wtf/assertions.cc	2019-05-23 21:39:34.000000000 +0900
@@ -51,6 +51,7 @@
 #if defined(OS_MACOSX) || (defined(OS_LINUX) && !defined(__UCLIBC__))
 #include <cxxabi.h>
 #include <dlfcn.h>
+#include <execinfo.h>
 #endif
 
 #if defined(OS_ANDROID)
diff -ruN qt-everywhere-src-5.13.0/qtwebengine/src/3rdparty/chromium/third_party/blink/renderer/platform/wtf/stack_util.cc qt-everywhere-src-5.13.0-orig/qtwebengine/src/3rdparty/chromium/third_party/blink/renderer/platform/wtf/stack_util.cc
--- qt-everywhere-src-5.13.0/qtwebengine/src/3rdparty/chromium/third_party/blink/renderer/platform/wtf/stack_util.cc	2019-08-05 01:11:08.102066939 +0900
+++ qt-everywhere-src-5.13.0-orig/qtwebengine/src/3rdparty/chromium/third_party/blink/renderer/platform/wtf/stack_util.cc	2019-05-23 21:39:34.000000000 +0900
@@ -30,7 +30,7 @@
 // FIXME: On Mac OSX and Linux, this method cannot estimate stack size
 // correctly for the main thread.
 
-#if defined(OS_LINUX) || defined(OS_ANDROID) || defined(OS_FREEBSD) || \
+#if defined(__GLIBC__) || defined(OS_ANDROID) || defined(OS_FREEBSD) || \
     defined(OS_FUCHSIA)
   // pthread_getattr_np() can fail if the thread is not invoked by
   // pthread_create() (e.g., the main thread of webkit_unit_tests).
@@ -98,7 +98,7 @@
 }
 
 void* GetStackStart() {
-#if defined(OS_LINUX) || defined(OS_ANDROID) || defined(OS_FREEBSD) || \
+#if defined(__GLIBC__) || defined(OS_ANDROID) || defined(OS_FREEBSD) || \
     defined(OS_FUCHSIA)
   pthread_attr_t attr;
   int error;
diff -ruN qt-everywhere-src-5.13.0/qtwebengine/src/3rdparty/chromium/third_party/breakpad/breakpad/src/client/linux/dump_writer_common/ucontext_reader.cc qt-everywhere-src-5.13.0-orig/qtwebengine/src/3rdparty/chromium/third_party/breakpad/breakpad/src/client/linux/dump_writer_common/ucontext_reader.cc
--- qt-everywhere-src-5.13.0/qtwebengine/src/3rdparty/chromium/third_party/breakpad/breakpad/src/client/linux/dump_writer_common/ucontext_reader.cc	2019-08-05 01:02:26.267018994 +0900
+++ qt-everywhere-src-5.13.0-orig/qtwebengine/src/3rdparty/chromium/third_party/breakpad/breakpad/src/client/linux/dump_writer_common/ucontext_reader.cc	2019-05-23 21:39:34.000000000 +0900
@@ -49,7 +49,7 @@
 }
 
 void UContextReader::FillCPUContext(RawContextCPU *out, const ucontext_t *uc,
-                                    const struct _fpstate* fp) {
+                                    const struct _libc_fpstate* fp) {
   const greg_t* regs = uc->uc_mcontext.gregs;
 
   out->context_flags = MD_CONTEXT_X86_FULL |
@@ -97,7 +97,7 @@
 }
 
 void UContextReader::FillCPUContext(RawContextCPU *out, const ucontext_t *uc,
-                                    const struct _fpstate* fpregs) {
+                                    const struct _libc_fpstate* fpregs) {
   const greg_t* regs = uc->uc_mcontext.gregs;
 
   out->context_flags = MD_CONTEXT_AMD64_FULL;
diff -ruN qt-everywhere-src-5.13.0/qtwebengine/src/3rdparty/chromium/third_party/breakpad/breakpad/src/client/linux/dump_writer_common/ucontext_reader.h qt-everywhere-src-5.13.0-orig/qtwebengine/src/3rdparty/chromium/third_party/breakpad/breakpad/src/client/linux/dump_writer_common/ucontext_reader.h
--- qt-everywhere-src-5.13.0/qtwebengine/src/3rdparty/chromium/third_party/breakpad/breakpad/src/client/linux/dump_writer_common/ucontext_reader.h	2019-08-05 01:02:44.909020707 +0900
+++ qt-everywhere-src-5.13.0-orig/qtwebengine/src/3rdparty/chromium/third_party/breakpad/breakpad/src/client/linux/dump_writer_common/ucontext_reader.h	2019-05-23 21:39:34.000000000 +0900
@@ -50,7 +50,7 @@
   //   info: the collection of register structures.
 #if defined(__i386__) || defined(__x86_64)
   static void FillCPUContext(RawContextCPU *out, const ucontext_t *uc,
-                             const struct _fpstate* fp);
+                             const struct _libc_fpstate* fp);
 #elif defined(__aarch64__)
   static void FillCPUContext(RawContextCPU *out, const ucontext_t *uc,
                              const struct fpsimd_context* fpregs);
diff -ruN qt-everywhere-src-5.13.0/qtwebengine/src/3rdparty/chromium/third_party/breakpad/breakpad/src/client/linux/minidump_writer/minidump_writer.h qt-everywhere-src-5.13.0-orig/qtwebengine/src/3rdparty/chromium/third_party/breakpad/breakpad/src/client/linux/minidump_writer/minidump_writer.h
--- qt-everywhere-src-5.13.0/qtwebengine/src/3rdparty/chromium/third_party/breakpad/breakpad/src/client/linux/minidump_writer/minidump_writer.h	2019-08-05 01:03:00.804022167 +0900
+++ qt-everywhere-src-5.13.0-orig/qtwebengine/src/3rdparty/chromium/third_party/breakpad/breakpad/src/client/linux/minidump_writer/minidump_writer.h	2019-05-23 21:39:34.000000000 +0900
@@ -48,7 +48,7 @@
 #if defined(__aarch64__)
 typedef struct fpsimd_context fpstate_t;
 #elif !defined(__ARM_EABI__) && !defined(__mips__)
-typedef struct _fpstate fpstate_t;
+typedef struct _libc_fpstate fpstate_t;
 #endif
 
 // These entries store a list of memory regions that the client wants included
diff -ruN qt-everywhere-src-5.13.0/qtwebengine/src/3rdparty/chromium/third_party/breakpad/breakpad/src/common/linux/elf_core_dump.h qt-everywhere-src-5.13.0-orig/qtwebengine/src/3rdparty/chromium/third_party/breakpad/breakpad/src/common/linux/elf_core_dump.h
--- qt-everywhere-src-5.13.0/qtwebengine/src/3rdparty/chromium/third_party/breakpad/breakpad/src/common/linux/elf_core_dump.h	2019-08-05 01:11:34.126069331 +0900
+++ qt-everywhere-src-5.13.0-orig/qtwebengine/src/3rdparty/chromium/third_party/breakpad/breakpad/src/common/linux/elf_core_dump.h	2019-05-23 21:39:34.000000000 +0900
@@ -36,9 +36,6 @@
 #include <elf.h>
 #include <link.h>
 #include <stddef.h>
-#ifndef __GLIBC__
-#include <sys/reg.h>
-#endif
 
 #include "common/memory_range.h"
 
diff -ruN qt-everywhere-src-5.13.0/qtwebengine/src/3rdparty/chromium/third_party/lss/linux_syscall_support.h qt-everywhere-src-5.13.0-orig/qtwebengine/src/3rdparty/chromium/third_party/lss/linux_syscall_support.h
--- qt-everywhere-src-5.13.0/qtwebengine/src/3rdparty/chromium/third_party/lss/linux_syscall_support.h	2019-08-05 01:05:24.032035327 +0900
+++ qt-everywhere-src-5.13.0-orig/qtwebengine/src/3rdparty/chromium/third_party/lss/linux_syscall_support.h	2019-05-23 21:39:34.000000000 +0900
@@ -1794,15 +1794,6 @@
 /* End of s390/s390x definitions                                             */
 #endif
 
-#ifndef __GLIBC__
-  /* For Musl libc pread/pread is the same as pread64/pwrite64 */
-#ifndef __NR_pread
-#define __NR_pread              __NR_pread64
-#endif
-#ifndef __NR_pwrite
-#define __NR_pwrite             __NR_pwrite64
-#endif
-#endif /* ifndef __GLIBC__ */
 
 /* After forking, we must make sure to only call system calls.               */
 #if defined(__BOUNDED_POINTERS__)
diff -ruN qt-everywhere-src-5.13.0/qtwebengine/src/3rdparty/chromium/third_party/openmax_dl/dl/BUILD.gn qt-everywhere-src-5.13.0-orig/qtwebengine/src/3rdparty/chromium/third_party/openmax_dl/dl/BUILD.gn
--- qt-everywhere-src-5.13.0/qtwebengine/src/3rdparty/chromium/third_party/openmax_dl/dl/BUILD.gn	2019-08-05 00:41:49.727905382 +0900
+++ qt-everywhere-src-5.13.0-orig/qtwebengine/src/3rdparty/chromium/third_party/openmax_dl/dl/BUILD.gn	2019-05-23 21:39:34.000000000 +0900
@@ -206,6 +206,18 @@
       "sp/src/arm/armv7/omxSP_FFTFwd_RToCCS_F32_Sfs_s.S",
       "sp/src/arm/armv7/omxSP_FFTInv_CCSToR_F32_Sfs_s.S",
     ]
+    if (arm_optionally_use_neon) {
+      # Run-time NEON detection.
+      deps = [
+        "//third_party/android_tools:cpu_features",
+      ]
+
+      # To get the __android_log_print routine
+      libs = [ "log" ]
+
+      # Detection routine
+      sources += [ "sp/src/arm/detect.c" ]
+    }
   }
 
   # NEON implementation of FFT. This library is NOT
diff -ruN qt-everywhere-src-5.13.0/qtwebengine/src/3rdparty/chromium/third_party/yasm/source/config/linux/config.h qt-everywhere-src-5.13.0-orig/qtwebengine/src/3rdparty/chromium/third_party/yasm/source/config/linux/config.h
--- qt-everywhere-src-5.13.0/qtwebengine/src/3rdparty/chromium/third_party/yasm/source/config/linux/config.h	2019-08-05 01:12:48.695076182 +0900
+++ qt-everywhere-src-5.13.0-orig/qtwebengine/src/3rdparty/chromium/third_party/yasm/source/config/linux/config.h	2019-05-23 21:39:34.000000000 +0900
@@ -5,7 +5,7 @@
 #define CPP_PROG "cc -E"
 
 /* */
-/* #undef ENABLE_NLS 1 */
+#define ENABLE_NLS 1
 
 /* Define to 1 if you have the `abort' function. */
 #define HAVE_ABORT 1
diff -ruN qt-everywhere-src-5.13.0/qtwebengine/src/3rdparty/chromium/v8/src/base/platform/platform-posix.cc qt-everywhere-src-5.13.0-orig/qtwebengine/src/3rdparty/chromium/v8/src/base/platform/platform-posix.cc
--- qt-everywhere-src-5.13.0/qtwebengine/src/3rdparty/chromium/v8/src/base/platform/platform-posix.cc	2019-08-05 01:12:22.074073736 +0900
+++ qt-everywhere-src-5.13.0-orig/qtwebengine/src/3rdparty/chromium/v8/src/base/platform/platform-posix.cc	2019-05-23 21:39:34.000000000 +0900
@@ -254,7 +254,7 @@
   // no hint at all. The high hint prevents the break from getting hemmed in
   // at low values, ceding half of the address space to the system heap.
   raw_addr += 0x80000000;
-#elif V8_OS_AIX || !defined(__GLIBC__)
+#elif V8_OS_AIX
   // The range 0x30000000 - 0xD0000000 is available on AIX;
   // choose the upper range.
   raw_addr += 0x90000000;
diff -ruN qt-everywhere-src-5.13.0/qtwebengine/src/core/api/qtbug-61521.cpp qt-everywhere-src-5.13.0-orig/qtwebengine/src/core/api/qtbug-61521.cpp
--- qt-everywhere-src-5.13.0/qtwebengine/src/core/api/qtbug-61521.cpp	2019-08-05 01:06:00.178038648 +0900
+++ qt-everywhere-src-5.13.0-orig/qtwebengine/src/core/api/qtbug-61521.cpp	2019-05-24 18:01:39.000000000 +0900
@@ -111,11 +111,7 @@
 }
 
 SHIM_HIDDEN void* ShimPvalloc(size_t size) {
-#if defined(__GLIBC__)
     return pvalloc(size);
-#else
-    return valloc((size+4095)&~4095);
-#endif
 }
 
 SHIM_HIDDEN int ShimPosixMemalign(void** r, size_t a, size_t s) {
