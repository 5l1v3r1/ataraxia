#!/bin/bash
#
# Ataraxia Linux stage archive generator
#

msg() { echo -e "\033[1;32m >>> \033[0m$@"; }
msgtwo() { echo -e "\033[1;35m * \033[0m$@"; }
die() { echo -e "\033[1;31m >>> \033[0m$@"; exit 1; }
dietwo() { echo -e "\033[1;31m * \033[0m$@"; exit 1; }
pushd () { command pushd "$@" > /dev/null; }
popd () { command popd "$@" > /dev/null; }

check_for_root() {
	if [[ $EUID -ne 0 ]]; then
		die "You must be root to run 'kagami'"
	fi
}

generate_stage() {
	msg "Generating stage archive"

	msg "Installing required packages"
	kagami -EWn -c "$BUILD"/target.config -r "$STAGE" \
		base-files linux-api-headers musl man-pages musl-tools file \
		m4 bison flex bc gcc ccache bzip2 pkgconf shadow sed ed grep bash dash \
		libtool expat ca-certificates autoconf automake libarchive gettext-tiny \
		coreutils diffutils findutils mandoc dialog less pigz iproute2 kbd \
		make patch tar vim procps-ng eudev busybox ubase s6 reiser4progs \
		kagami linux

	msg "Creating archive"
	pushd "$STAGE"
		bsdtar -c --zstd -f "$BUILD"/ataraxialinux-$BARCH.tar.zst .
	popd

	msg "Stage archive was generated successfully"
}

main_program() {
	[ "$BUILD" ] || die 'Variable for build directory is not set'
	[ "$BARCH" ] || die 'Variable for architecture is not set or is not supported'

	BUILD="$(realpath $BUILD)"

	STAGE="$BUILD/stage"

	rm -rf "$STAGE"
	mkdir -p "$STAGE"

	generate_stage
}

while getopts ab options; do
	case $options in
		a)
			BARCH="$OPTARG"
			;;
		b)
			BUILD="$OPTARG"
			;;
		:)
			die "Option '-${OPTARG}' needs an argument"
			;;
		\?)
			die "Option '-${OPTARG}' is illegal"
			;;
	esac
done
if [ "$#" -eq 0 ]; then
	die "Specify options."
fi
shift $((OPTIND - 1))

check_for_root
main_program

exit 0

